변수선언
변수타입(int,float,String)
   사용자정의변수 (enum)
연산자
  산술연산 => 숫자 
       +,-,*,/,% (산술연산)
       =, += , -=, *=, /=, %= 배정(대입)연산
  비교연산 => true/false (부울타입)
       ==, !=, >, <, >=, <=
  논리연산 => true/false (부울타입)
       &&, ||, ! 

제어문
  조건문
     if, if-else, if-else if - else
     switch(조건문){
     case 값:
         ....
         break;
     default:
     }
     
  반복문
     while(조건문){
        참인동안 실행되는 코드.
     }
     do {
        최소1번은 실행되는 코드.
     } while(조건문);
     for(초기화(1번실행);조건문;후실행(증감)){
         참인동안 실행되는 코드.
     }
     break = (switch의 경우는 제외하고)
                break가 속한 가장 안쪽의 반복문을 탈출.
     continue = 반복문의 처음으로 복귀.

  배열(고정길이)
      타입[] 변수명 = new 타입[길이];
      int[] point = new int[30];
      point[0],....,point[29]
      for(int i=0;i<point.length;i++){
          System.out.println(point[i]);
      }

   ArrayList (가변길이)
      ArrayList<타입> 변수명=new ArrayList<타입>();
      ArrayList<Integer/String/float> al=new ArrayList<Integer>();
      al.add(값);  // 생성(create)/추가
      al.get(인덱스); // 조회(read)
      al.set(인덱스,새값); // 수정(update)
      al.remove(인덱스/값); // 삭제(1건)
      al.clear(); // 삭제(전부)

  함수(function/method)
    반환값이 없는 함수
        void 함수명(매개변수){
        }
        함수명(값1,...,값n); <- 호출
    반환값이 있는 함수
        타입 함수명(매개변수){
             ....
             return 값/변수명/표현식;
        }
        변수명=함수명(값1,...,값n); <- 호출

     매개변수 => 타입 변수명1,타입 변수명2,..., 타입 변수명n 